from telegram import Update
from telegram.ext import ContextTypes
from firebase_admin import db
import uuid

def classify_task(text):
    result = {
        "category": "content" if "–±–∏—á–ª—ç–≥" in text else "general",
        "type": "action",
        "priority": "high" if "”©–Ω”©”©–¥”©—Ä" in text else "normal",
        "goal_ref": "yes" if "–∑–æ—Ä–∏–ª–≥–æ" in text or "—Ç”©–ª”©–≤–ª”©–≥”©”©" in text else "no",
        "text": text
    }
    return result

async def classify_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.effective_user.id)
    text = " ".join(context.args)

    if not text:
        await update.message.reply_text("üìù –î–∞–∞–ª–≥–∞–≤—Ä—ã–Ω —Ç–µ–∫—Å—Ç—ç—ç –æ—Ä—É—É–ª–Ω–∞ —É—É.")
        return

    task = classify_task(text)
    task_id = str(uuid.uuid4())
    task["id"] = task_id
    task["done"] = False

    ref = db.reference(f"bots/tenguun/users/{user_id}/tasks/{task_id}")
    ref.set(task)

    await update.message.reply_text(f"‚úÖ –ê–Ω–≥–∏–ª—Å–∞–Ω –¥–∞–∞–ª–≥–∞–≤–∞—Ä:\nüìå {task['text']}\nüóÇ –¢”©—Ä”©–ª: {task['category']}, –≠—Ä—ç–º–±—ç: {task['priority']}")